################################################################################
##
# Copyright 2017-2018 VMware Inc.
# This file is part of VNF-ONboarding
# All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
#         http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.
#
# For those usages not covered by the Apache License, Version 2.0 please
# contact:  osslegalrouting@vmware.com
 
##
 
#################################################################################


tosca_definitions_version: cloudify_dsl_1_3
# {{ vnf_description }}

imports:
  - http://www.getcloudify.org/spec/cloudify/4.2/types.yaml
  - https://raw.githubusercontent.com/cloudify-cosmo/tosca-vcloud-plugin/1.4/plugin.yaml

inputs:
  name:
    default: {{ vnfd_name }}
  template:
    default: {{ image_id }}
  ram:
    default: {{ ram }}
  cpu:
    default: {{ cpu }}
  catalog:
    default: {{ image_id }}
  network1_name:
    default: {{ nic1_name }}{% if nic2_name %}
  network2_name:
    default: {{ nic2_name }}{% endif %}{% if nic3_name %}
  network3_name:
    default: {{ nic3_name }}{% endif %}{% if nic4_name %}
  network4_name:
    default: {{ nic4_name }}{% endif %}{% if nic5_name %}
  network5_name:
    default: {{ nic5_name }}{% endif %}{% if nic6_name %}
  network6_name:
    default: {{ nic6_name }}{% endif %}
  vcloud_config:
    default: {}

node_templates:

  {{ vnfd_name }}_host:
    type: cloudify.vcloud.nodes.Server
    properties:
      server:
        name: { get_input: name }
        catalog: { get_input: catalog }
        template: { get_input: template }
        hardware:
          memory: { get_input: ram }
          cpu: { get_input: cpu }
      agent_config:
        install_method: none
      vcloud_config: { get_input: vcloud_config }
    relationships:
      - type: cloudify.vcloud.server_connected_to_port
        target: network1_port{% if nic2_name %}
      - type: cloudify.vcloud.server_connected_to_port
        target: network2_port{% endif %}{% if nic3_name %}
      - type: cloudify.vcloud.server_connected_to_port
        target: network3_port{% endif %}{% if nic4_name %}
      - type: cloudify.vcloud.server_connected_to_port
        target: network4_port {% endif %}{% if nic5_name %}
      - type: cloudify.vcloud.server_connected_to_port
        target: network5_port {% endif %}{% if nic6_name %}
      - type: cloudify.vcloud.server_connected_to_port
        target: network6_port {% endif %}

{% if scripts %}  {{ vnfd_name }}:
    type: cloudify.nodes.SoftwareComponent
    interfaces:
      cloudify.interfaces.lifecycle: {% if scripts.create %}
        create:
          implementation: {{ scripts.create }}
          executor: central_deployment_agent
          inputs:
            process:
              env:
                HOST_IP: { get_attribute: [{{ vnfd_name }}_host, ip] }{% endif %} {% if scripts.config %}
        configure:
          implementation: {{ scripts.config }}
          executor: central_deployment_agent
          inputs:
            process:
              env:
                HOST_IP: { get_attribute: [{{ vnfd_name }}_host, ip] }{% endif %} {% if scripts.delete %}
        delete:
          implementation: {{ scripts.delete }}
          executor: central_deployment_agent
          inputs:
            process:
              env:
                HOST_IP: { get_attribute: [{{ vnfd_name }}_host, ip] }{% endif %}
    relationships:
      - type: cloudify.relationships.contained_in
        target: {{ vnfd_name }}_host
{% endif %}

  network1_port:
    type: cloudify.vcloud.nodes.Port
    properties:
      port:
        network: { get_input: network1_name }
        ip_allocation_mode: dhcp
        primary_interface: true
      vcloud_config: { get_input: vcloud_config }
    relationships:
      - target: network1
        type: cloudify.vcloud.port_connected_to_network

  network1:
    type: cloudify.vcloud.nodes.Network
    properties:
      use_external_resource: true
      resource_id: { get_input: network1_name }
      vcloud_config: { get_input: vcloud_config }{% if nic2_name %}

  network2_port:
    type: cloudify.vcloud.nodes.Port
    properties:
      port:
        network: { get_input: network2_name }
      vcloud_config: { get_input: vcloud_config }
    relationships:
      - target: network2
        type: cloudify.vcloud.port_connected_to_network

  network2:
    type: cloudify.vcloud.nodes.Network
    properties:
      use_external_resource: true
      resource_id: { get_input: network2_name }
      vcloud_config: { get_input: vcloud_config }{% endif %}{% if nic3_name %}

  network3_port:
    type: cloudify.vcloud.nodes.Port
    properties:
      port:
        network: { get_input: network3_name }
      vcloud_config: { get_input: vcloud_config }
    relationships:
      - target: network3
        type: cloudify.vcloud.port_connected_to_network

  network3:
    type: cloudify.vcloud.nodes.Network
    properties:
      use_external_resource: true
      resource_id: { get_input: network3_name }
      vcloud_config: { get_input: vcloud_config }{% endif %}{% if nic4_name %}

  network4_port:
    type: cloudify.vcloud.nodes.Port
    properties:
      port:
        network: { get_input: network4_name }
      vcloud_config: { get_input: vcloud_config }
    relationships:
      - target: network4
        type: cloudify.vcloud.port_connected_to_network

  network4:
    type: cloudify.vcloud.nodes.Network
    properties:
      use_external_resource: true
      resource_id: { get_input: network4_name }
      vcloud_config: { get_input: vcloud_config } {% endif %}{% if nic5_name %}
  network5_port:
    type: cloudify.vcloud.nodes.Port
    properties:
      port:
        network: { get_input: network5_name }
      vcloud_config: { get_input: vcloud_config }
    relationships:
      - target: network5
        type: cloudify.vcloud.port_connected_to_network

  network5:
    type: cloudify.vcloud.nodes.Network
    properties:
      use_external_resource: true
      resource_id: { get_input: network5_name }
      vcloud_config: { get_input: vcloud_config }{% endif %}{% if nic6_name %}
 
  network6_port:
    type: cloudify.vcloud.nodes.Port
    properties:
      port:
        network: { get_input: network6_name }
      vcloud_config: { get_input: vcloud_config }
    relationships:
      - target: network6
        type: cloudify.vcloud.port_connected_to_network

  network6:
    type: cloudify.vcloud.nodes.Network
    properties:
      use_external_resource: true
      resource_id: { get_input: network6_name }
      vcloud_config: { get_input: vcloud_config }{% endif %}
